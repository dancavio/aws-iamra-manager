#!/usr/bin/env bash
set -eu

serve() {
    echo "Starting IMDSv2 credential server..."
    aws_signing_helper serve \
        --certificate "/iamram/certs/tls.crt" --private-key "/iamram/certs/tls.key" \
        --trust-anchor-arn "$trust_anchor_arn" --profile-arn "$profile_arn" \
        --role-arn "$role_arn" $optional_args &
    child=$!
    wait "$child"
}

fail() {
    for line in "$@"; do
        echo "$line" >/dev/stderr
    done
    exit 1
}

_finish() {
    echo "Killing server process"
    kill -TERM "$child"
    exit 0
}
trap _finish SIGTERM # Exit gracefully when SIGTERM'ed by k8s
trap _finish SIGINT  # Exit gracefully on Ctrl-C

_hup() {
    echo "Caught SIGHUP signal; reloading config"

    # TODO: only SIGTERM if any config has actually changed
    if [[ -f "$CONFIG_FILEPATH" ]]; then
        . "$CONFIG_FILEPATH"
        echo "Killing and restarting server process"
        kill -TERM "$child"
        serve
    else
        echo "No config file found, doing nothing"
        wait "$child"
    fi
}
trap _hup SIGHUP

echo "AWS IAM RA Manager sidecar container version $(cat version)"

. _common

if [[ -z "$trust_anchor_arn" || -z "$profile_arn" || -z "$role_arn" ]]; then
    fail "Error: The following arguments are required: -t, -p, -r" \
        "Usage: $0 -t <trust_anchor_arn> -p <profile_arn> -r <role_arn> [-d <duration_seconds>] [-n <role_session_name>]"
fi

optional_args=""

if [[ -n "$duration_seconds" ]]; then
    optional_args="--session-duration $duration_seconds"
fi

if [[ -n "$role_session_name" ]]; then
    optional_args="$optional_args --role-session-name $role_session_name"
fi

serve
