#!/usr/bin/env bash
set -eu

fail() {
    for line in "$@" ; do
        echo "$line" > /dev/stderr
    done
    exit 1
}

trust_anchor_arn=""
profile_arn=""
role_arn=""
duration_seconds=""
role_session_name=""

while getopts ":t:p:r:d:n:" opt; do
    case ${opt} in
        t )
            trust_anchor_arn=$OPTARG ;;
        p )
            profile_arn=$OPTARG ;;
        r )
            role_arn=$OPTARG ;;
        d )
            duration_seconds=$OPTARG ;;
        n )
            role_session_name=$OPTARG ;;
        \? )
            fail "Invalid option: $OPTARG" ;;
        : )
            fail "Invalid option: $OPTARG requires an argument" ;;
    esac
done

if [[ -z "$trust_anchor_arn" || -z "$profile_arn" || -z "$role_arn" ]]; then
    fail "Error: The following arguments are required: -t, -p, -r" \
         "Usage: $0 -t <trust_anchor_arn> -p <profile_arn> -r <role_arn> [-d <duration_seconds>] [-n <role_session_name>]"
fi

optional_args=""

if [[ -n "$duration_seconds" ]] ; then
    optional_args="--session-duration $duration_seconds"
fi

if [[ -n "$role_session_name" ]] ; then
    optional_args="$optional_args --role-session-name $role_session_name"
fi

echo "Starting IMDSv2 credential server..."

aws_signing_helper serve \
    --certificate "/iamram/certs/tls.crt" --private-key "/iamram/certs/tls.key" \
    --trust-anchor-arn "$trust_anchor_arn" --profile-arn "$profile_arn" \
    --role-arn "$role_arn" $optional_args
